@using CrudBlazor.FullStack.Shared
@page "/fetchdata"
@using Telerik.Blazor.Components.Button
@using Telerik.Blazor.Components.Grid
@using NPOI;
@using NPOI.XSSF.UserModel;
@using System.IO
@inject HttpClient Http
@inject IJSRuntime JsRuntime

<h1>Employee</h1>

<form>
    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">First Name</label>
        <div class="col-sm-10">
            <input bind="employee.FirstName" class="form-control"
                   placeholder="FirstName" />
        </div>
    </div>
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">Last Name</label>
        <div class="col-sm-10">
            <input bind="employee.LastName" class="form-control"
                   placeholder="LastName" />
        </div>
    </div>
    <input type="button" value="Add" class="btn btn-primary" onclick="@Add" />
    <input type="button" value="Update" class="btn btn-primary" onclick="@(()=>Update(employee.Id))" />
</form>

<br />

@if (emps == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>FirstName</th>
                <th>LastName</th>
                <th>Control</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in emps)
            {
                <tr>
                    <td>@emp.Id</td>
                    <td>@emp.FirstName</td>
                    <td>@emp.LastName</td>
                    <td>
                        <input type="button" value="Edit" class="btn btn-primary" onclick="@(() => Edit(emp.Id))" />
                        <input type="button" value="Del" class="btn btn-danger" onclick="@(()=> Del(emp.Id))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <TelerikGrid Data=@emps Height="400px"
                 Sortable=true
                 Pageable=true>
        <TelerikGridColumns>
            <TelerikGridColumn Field="Id" />
            <TelerikGridColumn Field="FirstName" Title="Temp. C" />
            <TelerikGridColumn Field="LastName" />
        </TelerikGridColumns>
    </TelerikGrid>
    <TelerikButton onclick="@ExportExcel">Download</TelerikButton>
}


@functions {
        List<Employee> emps;
        Employee employee = new Employee();


    protected override async Task OnInitAsync()
    {
        emps = await Http.GetJsonAsync<List<Employee>>("api/Employees/");
    }

    async Task Add()
    {
        var returnEmp = await Http.PostJsonAsync<Employee>($"api/Employees/", employee);
        emps.Add(returnEmp);
        await JsRuntime.InvokeAsync<string>(
                "commonJsFunctions.alert",
                "新增完成");
    }

    async Task Edit(int id)
    {
        employee = await Http.GetJsonAsync<Employee>($"api/Employees/{id}");
    }

    async Task Update(int id)
    {
        await Http.PutJsonAsync($"api/Employees/{id}", employee);
        var index = emps.FindIndex(m => m.Id == id);
        emps[index] = employee;
    }

    async Task Del(int id)
    {
        await Http.DeleteAsync($"api/Employees/{id}");
        var index = emps.FindIndex(m => m.Id == id);
        emps.RemoveAt(index);
    }

    async Task ExportExcel()
    {
        var wb = new XSSFWorkbook();
        var ws = wb.CreateSheet("Class");

        //欄位名稱
        ws.CreateRow(0);
        ws.GetRow(0).CreateCell(0).SetCellValue("Id");
        ws.GetRow(0).CreateCell(1).SetCellValue("FirstName");
        ws.GetRow(0).CreateCell(2).SetCellValue("LastName");

        for (int i = 0; i < emps.Count; i++)
        {
            ws.CreateRow(i);
            ws.GetRow(i).CreateCell(0).SetCellValue(emps[i].Id);
            ws.GetRow(i).CreateCell(1).SetCellValue(emps[i].FirstName);
            ws.GetRow(i).CreateCell(2).SetCellValue(emps[i].LastName);

        }

        var m = new MemoryStream();
        wb.Write(m);

        await JsRuntime.InvokeAsync<object>(
            "saveAsFile",
            "filename.xlsx",
            Convert.ToBase64String(m.ToArray()));
    }

}
